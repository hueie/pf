server.port=8081
#server.port=80
server.tomcat.uri-encoding=UTF-8
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
spring.http.encoding.force=true


#security.require-ssl=true
#server.ssl.key-store: keystore.p12
#server.ssl.key-store-password: 123456
#server.ssl.keyStoreType: PKCS12
#server.ssl.keyAlias: tomcat

#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/polarisfinder?useUnicode=yes&characterEncoding=UTF-8
spring.datasource.username=root
spring.datasource.password=1234
spring.datasource.tomcat.max-wait=20000
spring.datasource.tomcat.max-active=50
spring.datasource.tomcat.max-idle=20
spring.datasource.tomcat.min-idle=15
spring.datasource.sqlScriptEncoding=UTF-8

spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.id.new_generator_mappings = false
spring.jpa.properties.hibernate.format_sql = true

logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE 


polarisfinder.file.upload.dir=C:/upload
polarisfinder.libs.dir=C:/Program Files/Java/jdk1.8.0_131/jnilib

polarisfinder.video.server.ip=localhost
polarisfinder.video.server.port=6789

# ==============================================================

# = Spring Security / Queries for AuthenticationManagerBuilder  

# ==============================================================
#For jdbc Auth
#spring.queries.users-query=select username, password, active from user where username=?
#spring.queries.roles-query=select u.username, r.role from user u inner join user_role ur on(u.user_id=ur.user_id) inner join role r on(ur.role_id=r.role_id) where u.username=?

facebook.client.clientId= 2062485104030852
facebook.client.clientSecret= 10874475030833a7c64c858a41d24777
facebook.client.pre-established-redirect-uri=https://polarisfinder.com/
facebook.client.accessTokenUri= https://graph.facebook.com/oauth/access_token
facebook.client.userAuthorizationUri= https://www.facebook.com/dialog/oauth
facebook.client.tokenName= oauth_token
facebook.client.authenticationScheme= query
facebook.client.clientAuthenticationScheme= form
facebook.client.scope: public_profile,email,user_birthday
facebook.resource.userInfoUri= https://graph.facebook.com/me?fields=email,name 

google.client.clientId= 130866080001-qaoeqc5sagb4k41hl1r1ica4udq4dq05.apps.googleusercontent.com
google.client.clientSecret= EnwKXcIUcvUPXgUktzFJG85t
google.client.pre-established-redirect-uri=https://polarisfinder.com/
google.client.accessTokenUri= https://www.googleapis.com/oauth2/v4/token
google.client.userAuthorizationUri= https://accounts.google.com/o/oauth2/v2/auth
google.client.tokenName= oauth_token
google.client.authenticationScheme= query
google.client.clientAuthenticationScheme= form
google.client.scope: https://www.googleapis.com/auth/userinfo.email,https://www.googleapis.com/auth/userinfo.profile
google.resource.userInfoUri= https://www.googleapis.com/oauth2/v3/userinfo


github.client.clientId= bd1c0a783ccdd1c9b9e4
github.client.clientSecret= 1a9030fbca47a5b2c28e92f19050bb77824b5ad1
github.client.accessTokenUri= https://github.com/login/oauth/access_token
github.client.userAuthorizationUri= https://github.com/login/oauth/authorize
github.client.clientAuthenticationScheme= form
github.resource.userInfoUri= https://api.github.com/user


naver.client.clientId: ...
naver.client.clientSecret: ...
naver.client.accessTokenUri: https://nid.naver.com/oauth2.0/token
naver.client.userAuthorizationUri: https://nid.naver.com/oauth2.0/authorize
naver.client.tokenName: oauth_token
naver.client.authenticationScheme: query
naver.client.clientAuthenticationScheme: form
naver.resource.userInfoUri: https://openapi.naver.com/v1/nid/me

